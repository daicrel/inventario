# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    # Configuración de email
    app.email.from: 'daicrela@gmail.com'
    app.email.service: '%env(EMAIL_SERVICE)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    # Configuración de servicios de email
    App\Infrastructure\Notification\SesMailer:
        arguments:
            $fromEmail: '%app.email.from%'

    App\Infrastructure\Notification\SendGridMailer:
        arguments:
            $fromEmail: '%app.email.from%'

    # Factory para servicios de email
    App\Infrastructure\Notification\EmailServiceFactory:
        arguments:
            $smtpMailer: '@App\Infrastructure\Notification\SmtpMailer'
            $logMailer: '@App\Infrastructure\Notification\LogMailer'
            $sesMailer: '@App\Infrastructure\Notification\SesMailer'
            $sendGridMailer: '@App\Infrastructure\Notification\SendGridMailer'

    # Puerto/adaptador para envío de emails (configuración dinámica)
    App\Domain\Notification\EmailSenderInterface: '@App\Infrastructure\Notification\SmtpMailer'

    # Puerto/adaptador para persistencia de productos
    # Puedes alternar el repositorio a usar cambiando la siguiente línea:
    # - InMemoryProductRepository: para pruebas/desarrollo, sin base de datos.
    # Inyección de sesión para el repositorio en memoria
    App\Infrastructure\Product\Repository\InMemoryProductRepository:
        public: true

    #App\Domain\Product\Repository\ProductRepository: '@App\Infrastructure\Product\Repository\InMemoryProductRepository'


    # - DoctrineProductRepository: para producción, usando MySQL.
    # Para usar Doctrine (MySQL), comenta la línea anterior y descomenta esta:
    App\Domain\Product\Repository\ProductRepository: '@App\Infrastructure\Product\Repository\DoctrineProductRepository'

    # Configuración específica para controladores de Product
    App\Infrastructure\Product\Controller\Commands\ProductController:
        tags: ['controller.service_arguments']

    App\Infrastructure\Product\Controller\Queries\ProductQueryController:
        tags: ['controller.service_arguments']